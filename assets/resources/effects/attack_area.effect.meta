{
  "ver": "1.0.25",
  "uuid": "22f082f2-c01f-4ccc-8371-e71b0e875800",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nvarying lowp vec4 v_color;\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\nvoid main () {\n  mat4 mvp;\n  #if CC_USE_MODEL\n    mvp = cc_matViewProj * cc_matWorld;\n  #else\n    mvp = cc_matViewProj;\n  #endif\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\nprecision highp float;\nuniform sampler2D texture;\nvarying lowp vec4 v_color;\nvarying mediump vec2 v_uv0;\nuniform float minRadius;\nuniform float maxRadius;\nuniform float saturation;\nuniform vec4 areaColor;\nvoid main () {\n  vec4 dst;\n  float dis = distance(v_uv0, vec2(0.5, 0.5));\n  float alpha = smoothstep(maxRadius*1.01, maxRadius*0.99, dis);\n  dst.a = alpha * areaColor.a * (dis - minRadius) / (1.0 - minRadius) * saturation;\n  dst.rgb = areaColor.rgb;\n  gl_FragColor = dst;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin lowp vec4 a_color;\nout lowp vec4 v_color;\nin mediump vec2 a_uv0;\nout mediump vec2 v_uv0;\nvoid main () {\n  mat4 mvp;\n  #if CC_USE_MODEL\n    mvp = cc_matViewProj * cc_matWorld;\n  #else\n    mvp = cc_matViewProj;\n  #endif\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\nprecision highp float;\nuniform sampler2D texture;\nin lowp vec4 v_color;\nin mediump vec2 v_uv0;\nuniform PROPERTIES {\n  float alphaThreshold;\n  float minRadius;\n  float maxRadius;\n  float saturation;\n  vec4 areaColor;\n};\nvoid main () {\n  vec4 dst;\n  float dis = distance(v_uv0, vec2(0.5, 0.5));\n  float alpha = smoothstep(maxRadius*1.01, maxRadius*0.99, dis);\n  dst.a = alpha * areaColor.a * (dis - minRadius) / (1.0 - minRadius) * saturation;\n  dst.rgb = areaColor.rgb;\n  gl_FragColor = dst;\n}"
      }
    }
  ],
  "subMetas": {}
}